// form {
//   padding: 0 15px;
//   margin-bottom: 10px;
//   mat-form-field {
//     width: 100%;
//     // input {
//     //   height: 30px;
//     // }
//   }
// }

ion-segment {
  width: 80%;
  margin-left: 15px;
  background-color: rgb(233, 229, 229);
  border-radius: 26px;
  margin-top: 11px;
  padding: 3px;
}

ion-segment-button {
  --padding-top: 10px !important;
  --padding-bottom: 10px !important;
  --border-radius: 26px;
  --color: #25252998;
  --color-focused: #000000;
  --color-checked: #000000;
  ion-label {
    font-size: 13px;
    font-weight: 600;
  }
}

.thumbZone {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 50px;
  height: 50px;
  margin-right: 8px;
  border-radius: 50%;
  border: 1px solid grey;
}

.thumbIcon {
  height: 22px;
  width: 26px;
}

// .form-control {
//   font-size: 10px;
// }

::ng-deep .mat-form-field-appearance-outline .mat-form-field-infix {
  padding: 0 0 7px;
}

.champColor {
  margin-bottom: 20px;
  margin-top: 0;
  height: 60px;
  --detail-icon-opacity: 1;
  --detail-icon-color: black;
  &::part(detail-icon) {
    background: #e0e0e0;
    padding: 5px;
    width: 30px;
    height: 31px;
    border-radius: 11px;
  }
}

.checkZone {
  --background: var(--dataColor);
  --border-color-checked: var(--dataColor);
  --border-color: var(--dataColor);
}

.check {
  --border-color-checked: var(--dataColor);
  --background-checked: var(--dataColor);
  --size: 30px;
}

ion-button {
  --background: transparent;
  --background-activated: transparent;
}

.addSub {
  --background: #eaebef;
  --border-radius: 13px;
  min-width: 108px;
  &::part(native) {
    padding-left: 5px;
  }
  .button[slot="start"] {
    margin-right: 3px;
  }
  .button[slot="end"] {
    margin: 4px 0px;
  }
  ion-label {
    margin-left: 9px;
    margin-right: 0;
    font-size: 20px;
    font-weight: 700;
  }
}

.ripple-parent {
  position: relative;
  overflow: hidden;
}

ion-item {
  transition: 0.5s ease all;
  margin-top: 0;
}

.maxPlay {
  height: 0;
  margin: 0;
}

ion-card {
  height: 214px;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  border-radius: 27px;
  transition: 0.5s ease all;
  margin-top: 0;
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  background-size: 50%;
}

ion-card-subtitle {
  background: white;
  color: black;
  display: initial;
  padding: 1px 8px;
  border-radius: 7px;
  font-size: 10px;
}

ion-card-header {
  transition: 0.3s ease all;
}

ion-card-content {
  display: flex;
  justify-content: space-between;
  ion-avatar {
    position: relative;
    height: 57px;
    width: 57px;
    ion-badge {
      font-size: 10px;
      position: absolute;
      min-width: 26px;
      min-height: 26px;
      --padding-top: 8px;
      --padding-end: 0;
      --padding-bottom: 8px;
      --padding-start: 0;
      --background: white;
      --color: black;
      right: 0;
      bottom: 0;
      border-radius: 50%;
    }
  }
}

.iconPhoto {
  background: white;
  height: 34px;
  display: flex;
  border-radius: 50%;
  padding: 5px;
  justify-content: center;
  align-items: center;
  position: relative;
  right: 10px;
  align-self: flex-end;
}

.loader {
  position: absolute;
  z-index: 1000;
  height: 100%;
  width: 100%;
  background: #000000a6;
  display: flex;
  justify-content: center;
  align-items: center;
}

ion-spinner {
  --color: rgb(14, 6, 6);
}

mat-hint {
  font-size: 10px;
}

ion-range {
  padding-bottom: 0;
  // padding: 0 !important;
  .badgeRange {
    width: 35px;
    height: 35px;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 50%;
    background: white;
    color: black;
  }

  --pin-background: #1bac86;
  &::part(tick) {
    height: 3px;
    width: 3px;
    border-radius: 50%;
  }
  &::part(pin) {
    font-weight: 600;
  }
  &::part(bar) {
    background: #bdbfc63f;
    height: 3px;
  }

  &::part(bar-active),
  &::part(knob),
  &::part(tick) {
    background: #1bac86 !important;
  }
}

ion-radio-group {
  display: flex;
  gap: 5px;
}

.radioChoice {
  --color: var(--dataColor);
  --color-checked: var(--dataColor);
}
